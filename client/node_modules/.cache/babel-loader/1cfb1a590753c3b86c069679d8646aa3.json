{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/mern-text-form/client/src/components/create.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Create extends Component {\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n    this.API_URL = process.env.REACT_APP_API_URL;\n    this.onChangeArticleTitle = this.onChangeArticleTitle.bind(this);\n    this.onChangeArticleDescription = this.onChangeArticleDescription.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      article_title: \"\",\n      article_description: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // Get everything from the API\n    this.getArtwalks().then(() => console.log(\"Artwalks got it!\"));\n  }\n\n  async getArtwalks() {\n    let url = `${this.API_URL}/artwalks`; // URL of the API.\n\n    let result = await fetch(url); // Get the data\n\n    let json = await result.json(); // Turn it into json\n  } // These methods will update the state properties.\n\n\n  onChangeArticleTitle(e) {\n    this.setState({\n      article_title: e.target.value\n    });\n  }\n\n  onChangeArticleDescription(e) {\n    this.setState({\n      article_description: e.target.value\n    });\n  } // This function will handle the submission.\n\n\n  onSubmit(e) {\n    e.preventDefault(); // When post request is sent to the create url, axios will add a new record(newarticle) to the database.\n\n    const newarticle = {\n      article_title: this.state.article_title,\n      article_description: this.state.article_description\n    };\n    axios.post(\"http://localhost:5000/record/add\", newarticle).then(res => console.log(res.data)); // We will empty the state after posting the data to the database\n\n    this.setState({\n      article_title: \"\",\n      article_description: \"\"\n    });\n  } // This following section will display the form that takes the input from the user.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create New Article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title of the article: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.article_title,\n            onChange: this.onChangeArticleTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Article's description: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            value: this.state.article_description,\n            onChange: this.onChangeArticleDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create article\",\n            className: \"btn btn-primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/mern-text-form/client/src/components/create.js"],"names":["React","Component","axios","Create","constructor","props","API_URL","process","env","REACT_APP_API_URL","onChangeArticleTitle","bind","onChangeArticleDescription","onSubmit","state","article_title","article_description","componentDidMount","getArtwalks","then","console","log","url","result","fetch","json","e","setState","target","value","preventDefault","newarticle","post","res","data","render","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\n\nexport default class Create extends Component {\n\n  API_URL = process.env.REACT_APP_API_URL;\n  // This is the constructor that stores the data.\n  constructor(props) {\n    super(props);\n\n    this.onChangeArticleTitle = this.onChangeArticleTitle.bind(this);\n    this.onChangeArticleDescription = this.onChangeArticleDescription.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    \n    this.state = {\n      article_title: \"\",\n      article_description: \"\",\n    };\n  }\n\n  componentDidMount() {\n      // Get everything from the API\n      this.getArtwalks().then(() => console.log(\"Artwalks got it!\"));\n  }\n\n  async getArtwalks() {\n      let url = `${this.API_URL}/artwalks`; // URL of the API.\n      let result = await fetch(url); // Get the data\n      let json = await result.json(); // Turn it into json\n     \n  }\n\n  // These methods will update the state properties.\n  onChangeArticleTitle(e) {\n    this.setState({\n      article_title: e.target.value,\n    });\n  }\n\n  onChangeArticleDescription(e) {\n    this.setState({\n      article_description: e.target.value,\n    });\n  }\n\n// This function will handle the submission.\nonSubmit(e) {\n  e.preventDefault();\n\n  // When post request is sent to the create url, axios will add a new record(newarticle) to the database.\n  const newarticle = {\n    article_title: this.state.article_title,\n    article_description: this.state.article_description,\n  };\n\n  axios\n    .post(\"http://localhost:5000/record/add\", newarticle)\n    .then((res) => console.log(res.data));\n\n  // We will empty the state after posting the data to the database\n  this.setState({\n    article_title: \"\",\n    article_description: \"\",\n  });\n}\n\n  // This following section will display the form that takes the input from the user.\n  render() {\n    return (\n      <div className=\"container\" style={{ marginTop: 20 }}>\n        <h3>Create New Article</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Title of the article: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.article_title}\n              onChange={this.onChangeArticleTitle}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Article's description: </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.article_description}\n              onChange={this.onChangeArticleDescription}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create article\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}