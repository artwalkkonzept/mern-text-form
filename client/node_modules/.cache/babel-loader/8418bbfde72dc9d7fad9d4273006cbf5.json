{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/merntestapp/TxtForm/client/src/components/recordList.js\";\nimport React, { Component } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = {\n      records: []\n    };\n  } // This method will get the data from the database.\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/record/\").then(response => {\n      this.setState({\n        records: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // This method will delete a record based on the method\n\n\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:3000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      record: this.state.records.filter(el => el._id !== id)\n    });\n  } // This method will map out the users on the table\n\n\n  recordList() {\n    return this.state.records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord,\n        deleteRecord: this.deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"News List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.recordList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/admin/Desktop/merntestapp/TxtForm/client/src/components/recordList.js"],"names":["React","Component","axios","Link","RecordList","constructor","props","deleteRecord","bind","state","records","componentDidMount","get","then","response","setState","data","catch","error","console","log","id","delete","record","filter","el","_id","recordList","map","currentrecord","render","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAIA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAChD;AACAI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD,GAN+C,CAQhD;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CACFU,GADH,CACO,+BADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEI,QAAQ,CAACE;AAApB,OAAd;AACD,KAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD,GAlB+C,CAoBhD;;;AACAX,EAAAA,YAAY,CAACc,EAAD,EAAK;AACfnB,IAAAA,KAAK,CAACoB,MAAN,CAAa,2BAA2BD,EAAxC,EAA4CR,IAA5C,CAAkDC,QAAD,IAAc;AAC7DK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACE,IAArB;AACD,KAFD;AAIA,SAAKD,QAAL,CAAc;AACZQ,MAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWC,OAAX,CAAmBc,MAAnB,CAA2BC,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAWL,EAA7C;AADI,KAAd;AAGD,GA7B+C,CA+BhD;;;AACAM,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKlB,KAAL,CAAWC,OAAX,CAAmBkB,GAAnB,CAAwBC,aAAD,IAAmB;AAC/C,0BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEA,aADV;AAEE,QAAA,YAAY,EAAE,KAAKtB;AAFrB,SAGOsB,aAAa,CAACH,GAHrB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARM,CAAP;AASD,GA1C+C,CA4ChD;;;AACAI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAA9C;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBAAQ,KAAKJ,UAAL;AAAR;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7D+C","sourcesContent":["import React, { Component } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\n \n\n \nexport default class RecordList extends Component {\n  // This is the constructor that shall store our data retrieved from the database\n  constructor(props) {\n    super(props);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.state = { records: [] };\n  }\n \n  // This method will get the data from the database.\n  componentDidMount() {\n    axios\n      .get(\"http://localhost:5000/record/\")\n      .then((response) => {\n        this.setState({ records: response.data });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  // This method will delete a record based on the method\n  deleteRecord(id) {\n    axios.delete(\"http://localhost:3000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n\n    this.setState({\n      record: this.state.records.filter((el) => el._id !== id),\n    });\n  }\n \n  // This method will map out the users on the table\n  recordList() {\n    return this.state.records.map((currentrecord) => {\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={this.deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n \n  // This following section will display the table with the records of individuals.\n  render() {\n    return (\n      <div className=\"container\">\n        <h3>News List</h3>\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Description</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{this.recordList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}